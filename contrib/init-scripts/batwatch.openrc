#!/sbin/runscript
#
# batwatch - daemon start/stop script (openrc)
#
# Copyright (C) 2014 Andre Erdmann <dywi@mailerd.de>
# Distributed under the terms of the GNU General Public License;
# either version 2 of the License, or (at your option) any later version.
#

extra_started_commands="reload"
description_reload="forcefully update batteries"

: ${BATWATCH_PIDFILE:=/run/batwatch/batwatch.pid}
: ${BATWATCH_BINARY:=/usr/bin/batwatch}
: ${BATWATCH_RUNDIR:=/}
: ${BATWATCH_OPTS=}
: ${BATWATCH_USER=}
: ${BATWATCH_GROUP=}

: ${MY_SSD_OPTS=}
if [ -n "${BATWATCH_USER}" ]; then
   MY_SSD_OPTS="${MY_SSD_OPTS-} -u ${BATWATCH_USER}"
fi

if [ -n "${BATWATCH_GROUP}" ]; then
   MY_SSD_OPTS="${MY_SSD_OPTS-} -g ${BATWATCH_GROUP}"
fi

depend() {
   use logger
   need dbus dev localmount
   after netmount nfsmount
}

batwatch_prepare() {
   case "${BATWATCH_PIDFILE}" in
      */batwatch/?*)
         checkpath -d -m 0750 \
            -o "${BATWATCH_USER:-root}:${BATWATCH_GROUP:-root}" \
            "${BATWATCH_PIDFILE%/*}"
      ;;
   esac
}

do_stop() {
   start-stop-daemon --stop --exec "${BATWATCH_BINARY}" \
      --pidfile "${BATWATCH_PIDFILE}" ${MY_SSD_OPTS-} "$@"
}

start() {
   case "${RC_CMD}" in
      reload)
         true
      ;;
      *)
         batwatch_prepare || return 1
      ;;
   esac
   ebegin "Starting ${RC_SVCNAME}"
   start-stop-daemon --start --exec "${BATWATCH_BINARY}" \
      --pidfile "${BATWATCH_PIDFILE}" ${MY_SSD_OPTS-} -- \
      -p "${BATWATCH_PIDFILE}" -C "${BATWATCH_RUNDIR}" \
      ${BATWATCH_OPTS-}
   eend ${?}
}

stop() {
   ebegin "Stopping ${RC_SVCNAME}"
   do_stop
   eend ${?}
}

reload() {
   batwatch_prepare || return 1
   ebegin "Reloading ${RC_SVNAME}"
   do_stop --signalHUP
   eend ${?}
}
